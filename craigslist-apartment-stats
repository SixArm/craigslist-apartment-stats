#!/bin/sh
set -euf

program_command="craigslist-apartment-stats"
program_version="3.0.0"
program_created="2014-12-24"
program_updated="2016-02-10"
program_license="GPL"
program_contact="Joel Parker Henderson (joel@joelparkerhenderson.com)"
program_variant="$program_command version $program_version updated $program_updated"

help(){
cat<<END
craigslist-apartment-stats:
Calculate statistics for Craigslist apartment listings.

What this does:

  1. Fetch a given URL
  2. Render the HTML
  3. Filter for the number of bedrooms
  4. Calculate price statistics

Syntax:

    craigslist-apartment-stats [options] <url> ...

Example:

    craigslist-apartment-stats \\
    http://sfbay.craigslist.org/search/sfc/apa?bedrooms=3&min_price=1000&max_price=9000

Options:

  * --bedrooms <number>: the number of bedrooms for the filter; default is 1.
  * -h, --help, -?: show help
  * -V, --version: show version

## Filter hints

The Craigslist apartment listing web pages in some cities will let you
filter by neighborhood, or price, or whether pets are allowed, and so
on. These filters can be useful for scoping your search.

## Bedroom hints

If you use Craigslist and its web page to filter for number of
bedrooms, then Craigslist typically shows any listings that have that
number of bedrooms or more. This is probably *not* what you want for
calculating meaningful statistics.

This script provides the bedroom filter, so you can limit the bedrooms
to exactly one number.

## Price hints

Listing prices may vary by large ranges, depending if the price is per
week, per month, or per year. For example, if you want statistics on
apartments that are approximately \$1000 per month, then you can make a
good guess that listing prices near \$250 are actuallly per week not
per month, and listing prices near \$12,000 are per year not per month.

You can get improve your results by filtering for a minimum price and
maximum price. To do this, use Craigslist's website search to create a
link that includes minimum price and a maximum price.

## Requirements

This script requires these commands:

  * \`curl\` fetches the web page
  * \`html2text\`renders the web page HTML
  * \`num\` calculates the stats; get it at http://www.numcommand.com

Command:$program_command
Version:$program_version
Created:$program_created
Updated:$program_updated
License:$program_license
Contact:$program_contact
END
}

## Staples
out () { printf %s\\n "$*" ; }
err () { >&2 printf %s\\n "$*" ; }
die () { >&2 printf %s\\n "$*" ; exit 1 ; }
die_opt_unk() { die "Option $1 is unknown" ; }
die_opt_arg() { die "Option $1 needs an argument" ; }

## Defaults - these are suiable for a demo
bedrooms="1"
min="1"
max="10000"

while [ $# -gt 0 ]; do
  case $1 in
    --)
      shift
      break
      ;;
    -h|--help|-\?)
      help
      ;;
    -V|--version|-\?)
      out $program_variant
      ;;
    --bedrooms)
      [ $# -le 1 ] && die_opt_arg $1
      bedrooms=$2
      shift
      ;;
    --min)
      [ $# -le 1 ] && die_opt_arg $1
      min=$2
      shift
      ;;
    --max)
      [ $# -le 1 ] && die_opt_arg $1
      max=$2
      shift
      ;;
    -?*)
      die_opt_unk $1
      ;;
    *)
      break
  esac
  shift
done

[ $# -eq 0 ] && help && exit 0

echo "min max range mean stddev skewness kurtosis"

for uri in "$@"; do
  curl -s "$uri" |
  html2text -nobs -width 10000 |
  sed '/Few LOCAL results found/,$d' |
  sed -n "s/^.*[^0-9]\([0-9]\+\) \/ ${bedrooms}br - .*$/\1/p" |
  num min max range mean stddev skewness kurtosis
done
